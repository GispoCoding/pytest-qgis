[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "pytest-qgis"
authors = [{ name = "Gispo Ltd.", email = "info@gispo.fi" }]
maintainers = [{ name = "Gispo Ltd.", email = "info@gispo.fi" }]

description = "A pytest plugin for testing QGIS python plugins"
readme = "README.md"

dynamic = ["version"]
keywords = ["pytest", "qgis", "QGIS", "PyQGIS"]

requires-python = ">=3.7"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
]
dependencies = ["pytest >= 6.0"]

[project.urls]
homepage = "https://github.com/GispoCoding/pytest-qgis"
repository = "https://github.com/GispoCoding/pytest-qgis"
changelog = "https://github.com/GispoCoding/pytest-qgis/CHANGELOG.md"

[project.entry-points.pytest11]
pytest_qgis = "pytest_qgis"


[tool]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "pytest_qgis._version.__version__" }

[tool.setuptools.package-data]
pytest_qgis = ["py.typed"]


[tool.pytest.ini_options]
doctest_encoding = "utf-8"
markers = [
    "with_pytest_qt: these tests require pytest-qt (deselect with '-m \"with_pytest_qt\"')"
]

[tool.isort]
profile = "black"
multi_line_output = 3


[tool.mypy]
disable_error_code = "misc"
ignore_missing_imports = true
follow_imports = "silent"
show_column_numbers = true

[tool.ruff]
line-length = 88
indent-width = 4

target-version = "py37"

external = ["QGS"]

[tool.ruff.lint]
select = [
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "C90", # flake8, mccabe
    "E",   # flake8, pycodestyle
    "F",   # flake8, Pyflakes
    "I",   # isort
    "INP", # flake8-no-pep420
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "T",   # flake8-print
    "ICN", # flake8-import-conventions
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "W",   # flake8, pycodestyle
    "UP",  # pyupgrade
]

ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "PT004"  # Fixture does not return anything, add leading underscore
]

unfixable = [
    "F401", # Unused imports
    "F841", # Unused variables
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"src/pytest_qgis/pytest_qgis.py"=["PLR2004"]  # TODO: Fix magic values. Remove this after.
"src/pytest_qgis/qgis_interface.py" = ["N802", "N803"]
"tests/*" = [
    "ANN001",
    "ANN201",
    "ARG001", # TODO: Unused function argument. These are mostly pytest fixtures. Find a way to allow these in tests. Remove this after.
]
